rm(list=ls())
# Load required packages
packageLoad <- function(packName){ #packName - package name as a character string, e.g. "quantmod"
if(!require(packName,character.only = TRUE)){ #If the package is not available, install it
install.packages(packName,dependencies=TRUE,repos="http://cran.r-project.org")
}
library(packName, character.only = TRUE) # load package
}
sapply(c("xts", "readxl"), function(x) packageLoad(x))
is.integer0 <- function(x) {is.integer(x) && length(x) == 0L}
# Plot timeseries
plotTimeseries <- function(data1) {
label1 <- colnames(data1)
r1 <- range(index(data1)[which(!is.na(data1))])[1]
r2 <- range(index(data1)[which(!is.na(data1))])[2]
data2plot <- na.omit(data1)[paste0(r1,"/",r2)]
data2plot <- data.frame(as.numeric(data2plot), row.names = as.character(index(data2plot)))
# Specific to LIFT 2019
do.not.plot <- which(data2plot[,1] == "Bad")
if(!is.integer0(do.not.plot)) {data2plot <- data2plot[-do.not.plot,]}
y.lim <- if(!is.integer0(grep("DO", label1, value = FALSE))){c(0,10)} else {
if(!is.integer0(grep("Valve Position", label1, value=FALSE))){c(0,100)} else {
c(min(na.omit(data2plot[,1])), max(na.omit(data2plot[,1])))}}
data2plot <- cbind(data2plot, as.numeric(difftime(as.POSIXct(rownames(data2plot)), as.POSIXct(rownames(data2plot)[1]),units = "days")))
par(mar=c(2.6,2.6,2.1,0.1), cex.axis = 1.25)
plot(x = data2plot[,ncol(data2plot)], y = data2plot[,1], type = "p", pch = 20, col = "black", xaxt = "n", xlab = "", ylab = "", ylim = y.lim)
mtext(side = 3, label1, line = .5)
# x-axis
axis.ticks <- seq(0,round(data2plot[nrow(data2plot),ncol(data2plot)]), by = 10)
axis.labels <- sapply(axis.ticks, function(x) which(x > data2plot[,ncol(data2plot)]))
axis.labels <- sapply(axis.labels, function(x) x[length(x)])
axis.labels[[1]] <- 1
axis.labels <- as.numeric(unlist(axis.labels))
axis(side = 1, at = axis.ticks, labels = format(as.POSIXct(rownames(data2plot)[axis.labels]), "%m/%d"))
}
SCADA.data <- read_excel("data/Copy of Basin 3_5m SCADA Data_Jan-Mar 21 2019_LIFT 2019.xlsx")
SCADA.data <- xts(data.frame(SCADA.data[-which(is.na(SCADA.data[,1][[1]])),-1]), order.by = as.POSIXct(SCADA.data[-which(is.na(SCADA.data[,1][[1]])),1][[1]]))
constant.vars <- c("BASIN.3.ZONE.9.DO", "BASIN.3.ZONE.9.FLOW",
"ABASIN.3..MIXING.ZONE.1.ORP", "ABASIN.3.MIXER.1.RUNTIME",
"ABASIN.3.MIXER.2.RUNTIME", "ABASIN.3.MIXER.3.RUNTIME",
"ABASIN.3.MIXER.4.RUNTIME..F_CV.", "ABASIN.3.MIXER.5.RUNTIME..F_CV.",
"ABASIN.3.IMLR.PUMP.1.RUNNING..F_CV.", "ABASIN.3.IMLR.PUMP.2.RUNNING..F_CV.",
"ABASIN.3.IMLR.PUMP.3.RUNNING..F_CV.", "ABASIN.3.MIXER.1.RUNNING..F_CV.",
"ABASIN.3.MIXER.2.RUNNING..F_CV.", "ABASIN.3.MIXER.3.RUNNING..F_CV.",
"ABASIN.3.MIXER.4.RUNNING..F_CV.","ABASIN.3.MIXER.5.RUNNING..F_CV.",
"MIXED.LIQUOR.CHANNEL.pH..RAW..F_CV.", "PLANT.INFLUENT.FLOW",
"PLANT.INFLUENT.PH", "INFLUENT.H20.TEMPERATURE..REAL.",
"CENTRATE.PUMP..1.RUN.STATUS", "CENTRATE.PUMP..2.RUN.STATUS", "MIXED.LIQUOR.CHANNEL.pH..ACTUAL", "PAD.AIR.FLOW..F_CV.")
SCADA.data <- SCADA.data[,-which(colnames(SCADA.data) %in% constant.vars)]
# colnames(SCADA.data) <-
capwords <- function(s, strict = FALSE) {
cap <- function(s) paste(toupper(substring(s, 1, 1)),
{s <- substring(s, 2); if(strict) tolower(s) else s},
sep = "", collapse = " " )
sapply(strsplit(s, split = " "), cap, USE.NAMES = !is.null(names(s)))
}
SCADA.data.names <- as.character(sapply(stringr::str_replace_all(colnames(SCADA.data), c("[.][.]" = " ", "[.]" = " ", "_" = " ")), function(x) capwords(casefold(x, upper = FALSE))))
SCADA.data.names <- stringr::str_replace_all(SCADA.data.names, "Do", "DO")
colnames(SCADA.data) <- SCADA.data.names
for (i in 1:ncol(SCADA.data)) {
plotTimeseries(SCADA.data[,i])
}
n <- round(ncol(SCADA.data)/2)
png("images/LIFT_2019_timeseries_01.png", units = "in", width = 6.5, height = 9, res = 200)
par(mfrow=c(5,2))
sapply(SCADA.data[,1:n], function(x) plotTimeseries(x))
dev.off()
png("images/LIFT_2019_timeseries_02.png", units = "in", width = 6.5, height = 9, res = 200)
par(mfrow=c(5,2))
sapply(SCADA.data[,(n+1):ncol(SCADA.data)], function(x) plotTimeseries(x))
dev.off()
